# This config was automatically generated from your source code
# Stacks detected: deps:node:api-gtw-acck,deps:python:api-gtw-acck
version: 2.1
orbs:
  node: circleci/node@5
  python: circleci/python@2
jobs:
  install-node:
    # Install node dependencies and run tests
    executor: node/default
    working_directory: ~/project/api-gtw-acck
    steps:
      - checkout:
          path: ~/project
      - node/install-packages:
          pkg-manager: npm
      - save_cache:
          key: v1-deps-{{ checksum "package-lock.json" }}
          paths: 
            - node_modules
  install-python:
    # Install dependencies and run tests
    docker:
      - image: cimg/python:3.8-node
    working_directory: ~/project/api-gtw-acck
    steps:
      - checkout:
          path: ~/project
      - python/install-packages:
          args: pytest
          pkg-manager: pip
          pypi-cache: false
      # - run:
      #     name: Run tests
      #     command: pytest --junitxml=junit.xml
      # - store_test_results:
      #     path: junit.xml
  deploy:
    # This is an example deploy job, not actually used by the workflow
    docker:
      - image: cimg/python:3.8-node
    working_directory: ~/project/
    steps:
      # Replace this with steps to deploy to users
      - checkout:
          path: ~/project
      - restore_cache:
          key: v1-deps-{{ checksum "package-lock.json" }}
      - run:
          name: install serverless
          command: 'npm i --prefix=$HOME/.local --global serverless'
      - run:
          name: config serverless cli
          command: './api-gtw-acck/node_modules/.bin/serverless config credentials --provider aws --key $AWS_ACCESS_KEY --secret $AWS_SECRET_KEY'
      - run:
          name: prep deploy
          command: './deploy.sh'
      - run:
          name: echo
          command: 'cat ./api-gtw-acck/logs_handler.py'
      - run:
          name: deploy
          command: cd ./api-gtw-acck && sls deploy
workflows:
  build-and-test:
    jobs:
      - install-node
      - install-python
      - deploy
    # - deploy:
    #     requires:
    #       - test-node
    #       - test-python
