service: cc
frameworkVersion: '3'

provider:
  name: aws
  runtime: python3.9
  region: us-east-1

functions:

  ## Setup do DB
  MigrateDB:
    handler: handler.migration
    events:
      - http:
          path: v1/keys/migration
          method: get

  ## Funções relativas ao microserviço de chaves (tags)
  
  CreateKey:
    handler: handler.create_key
    events:
      - http:
          path: v1/keys
          method: post
          cors: 
            origins:
            - 'http://freirezinho.github.io/keyz-panel/'
            - 'http://localhost/'
  
  GetKey:
    handler: handler.get_key
    events:
      - http:
          path: v1/keys/{id}
          method: get
          cors: 
            origins:
            - 'http://freirezinho.github.io/keyz-panel/'
            - 'http://localhost/'
          request:
            parameters:
              paths:
                id: true
  
  ValidateKey:
    handler: handler.validate_key
    events:
      - http:
          path: v1/keys/validate/{value}
          method: get
          cors: 
            origins:
            - 'http://freirezinho.github.io/keyz-panel/'
            - 'http://localhost/'
          request:
            parameters:
              paths:
                value: true
  
  CancelKey:
    handler: handler.cancel_key
    events:
      - http:
          path: v1/keys/{id}
          method: delete
          cors: 
            origins:
            - 'http://freirezinho.github.io/keyz-panel/'
            - 'http://localhost/'
          request:
            parameters:
              paths:
                id: true

  ## Funções relativas aos serviço de logs

  CreateLog:
    handler: logs_handler.log_access
    events:
      - http:
          path: v1/logs
          method: post
  
  GetLogs:
    handler: logs_handler.get_logs
    events:
      - http:
          path: v1/logs
          method: get
          cors: 
            origins:
            - 'http://freirezinho.github.io/keyz-panel/'
            - 'http://localhost/'

plugins:
  - serverless-localstack
  - serverless-python-requirements
custom:
  localstack:
    stages:
      - local
    host: http://localhost  # optional - LocalStack host to connect to
    # autostart: true  # optional - start LocalStack in Docker on Serverless deploy
    endpointFile: local_endpoints.json
    # lambda:
    #   # Enable this flag to improve performance
    #   mountCode: True
    # docker:
    #   # Enable this flag to run "docker ..." commands as sudo
    #   sudo: True
  pythonRequirements:
    zip: true
  #   layer: true